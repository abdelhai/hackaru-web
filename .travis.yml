language: shell
os: linux
dist: xenial

jobs:
  include:
    - stage: lint
      language: node_js
      node_js:
        - 12
      cache: yarn
      services:
        - docker
      script:
        - yarn lint .

    - stage: build
      services:
        - docker
      script:
        - docker-compose build

    - stage: test
      language: node_js
      node_js:
        - 12
      cache: yarn
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - yarn test
      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    - stage: push
      if: tag =~ ^v
      services:
        - docker
      script:
        - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
        - |
          TAGS=(
            "latest" \
            "$(echo "$TRAVIS_TAG" | sed -E 's/^v([0-9]+)\.([0-9]+)\.([0-9]+)$/\1/')" \
            "$(echo "$TRAVIS_TAG" | sed -E 's/^v([0-9]+)\.([0-9]+)\.([0-9]+)$/\1.\2/')" \
            "$(echo "$TRAVIS_TAG" | sed -E 's/^v([0-9]+)\.([0-9]+)\.([0-9]+)$/\1.\2.\3/')" \
          )
          for TAG in ${TAGS[@]}; do
            docker build . -t "$DOCKER_REPO_NAME:$TAG"
            docker push "$DOCKER_REPO_NAME:$TAG"
          done

    - stage: upload-source-map
      if: tag =~ ^v
      services:
        - docker
      script:
        - |
          docker-compose run --rm \
            -e SENTRY_PUBLISH_RELEASE=true \
            -e SENTRY_AUTO_ATTACH_COMMITS=true \
            -e SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN \
            -e SENTRY_ORG=$SENTRY_ORG \
            -e SENTRY_PROJECT=$SENTRY_PROJECT \
            -e SENTRY_RELEASE=$TRAVIS_TAG \
            web yarn build
